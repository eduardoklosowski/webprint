services:
  proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    environment:
      BACKEND_URL: http://backend:8000/
    ports:
      - "80"
    volumes:
      - mediafiles:/webprint/data/mediafiles
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      SECRET_KEY: "${SECRET_KEY}"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      LANGUAGE_CODE: "${LANGUAGE_CODE:-en-us}"
      TIME_ZONE: "${TIME_ZONE:-UTC}"
    expose:
      - "8000"
    volumes:
      - mediafiles:/webprint/data/mediafiles
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    expose:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      retries: 5

volumes:
  db-data:
  mediafiles:
